{"version":3,"file":"static/js/989.80a12279.chunk.js","mappings":"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","sources":["services/users-api.js","components/Card/Card.styled.js","components/Card/Card.jsx","components/CardsGallery/CardsGallery.styled.js","components/CardsGallery/CardsGallery.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Tweets.jsx"],"sourcesContent":["const BASE_URL = 'https://643444ee1c5ed06c95935b39.mockapi.io';\r\n\r\nexport const getUsers = () => {\r\n  const response = fetch(`${BASE_URL}/users`);\r\n  return response;\r\n};\r\n\r\nexport const setNewUserData = (update, id) => {\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(update),\r\n  };\r\n\r\n  const response = fetch(`${BASE_URL}/users/${id}`, requestOptions);\r\n  return response;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Rectangle = styled.div`\r\n  width: 380px;\r\n  height: 8px;\r\n  background-color: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n`;\r\n\r\nexport const Ellipse = styled.div`\r\n  position: absolute;\r\n  top: 178px;\r\n  left: 150px;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #ebd8ff;\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px #ae7be3,\r\n    inset 0px 4.39163px 3.29372px #fbf8ff;\r\n  //   border-radius: 13.1749px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const UserImg = styled.img`\r\n  position: absolute;\r\n  top: 187px;\r\n  left: 159px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  position: relative;\r\n  height: 214px;\r\n  margin-bottom: 62px;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n`;\r\n\r\nexport const BgImg = styled.img`\r\n  margin: 28px 36px 18px 36px;\r\n`;\r\n\r\nexport const TextT = styled.p`\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1.2;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n  margin: 0 0 16px 0;\r\n`;\r\n\r\nexport const TextF = styled.p`\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1.2;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n  margin: 0 0 26px 0;\r\n`;\r\n\r\nexport const BtnFollow = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n  background-color: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n`;\r\n\r\nexport const BtnFollowing = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n  background-color: #5cd3a8;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TextBtn = styled.span`\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 1.22;\r\n  text-transform: uppercase;\r\n  color: #373737;\r\n`;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { setNewUserData } from 'services/users-api';\r\nimport {\r\n  Ellipse,\r\n  UserImg,\r\n  Rectangle,\r\n  Section,\r\n  Logo,\r\n  BgImg,\r\n  TextT,\r\n  TextF,\r\n  Div,\r\n  TextBtn,\r\n  BtnFollowing,\r\n  BtnFollow,\r\n} from './Card.styled';\r\nimport logo from './logo.png';\r\nimport bg from './picture.png';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst savedIds = JSON.parse(localStorage.getItem('status')) || [];\r\n\r\nexport default function Card({ user, avatar, tweets, followers, id }) {\r\n  const [newFollowers, setNewFollowers] = useState(followers);\r\n  const isFirstRender = useRef(true);\r\n  const haveId = savedIds.includes(id);\r\n\r\n  const handleBtnClick = () => {\r\n    if (!haveId) {\r\n      setNewFollowers(state => state + 1);\r\n      savedIds.push(id);\r\n    }\r\n\r\n    if (haveId) {\r\n      setNewFollowers(state => state - 1);\r\n      const ind = savedIds.indexOf(id);\r\n      savedIds.splice(ind, 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    setNewUserData({ followers: Number(`${newFollowers}`) }, `${id}`);\r\n    localStorage.setItem('status', JSON.stringify(savedIds));\r\n  }, [newFollowers]);\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Logo src={logo} alt=\"go it logo\" />\r\n        <BgImg src={bg} alt=\"talks logo\" />\r\n        <Rectangle />\r\n        <Ellipse />\r\n        <UserImg src={avatar} alt={user} width=\"62\" />\r\n      </Section>\r\n\r\n      <Div>\r\n        <TextT>{tweets} tweets</TextT>\r\n        <TextF>{newFollowers.toLocaleString('en-US')} followers</TextF>\r\n        {haveId ? (\r\n          <BtnFollowing type=\"button\" onClick={handleBtnClick}>\r\n            <TextBtn>following</TextBtn>\r\n          </BtnFollowing>\r\n        ) : (\r\n          <BtnFollow type=\"button\" onClick={handleBtnClick}>\r\n            <TextBtn>follow</TextBtn>\r\n          </BtnFollow>\r\n        )}\r\n      </Div>\r\n    </>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  user: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  tweets: PropTypes.number.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  gap: 26px;\r\n  padding: 0 20px 0 10px;\r\n  margin: 26px 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  width: 380px;\r\n  height: 460px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n  background-color: #ebd8ff;\r\n  border: 2px solid #471ca9;\r\n  border-radius: 10.3108px;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  color: #373737;\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #5cd3a8;\r\n    border: 2px solid transparent;\r\n  }\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Notification = styled.p`\r\n  text-align: center;\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  color: #373737;\r\n`;\r\n","import Card from 'components/Card';\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Flex,\r\n  List,\r\n  ListItem,\r\n  Notification,\r\n} from './CardsGallery.styled';\r\n\r\nconst perPage = 3;\r\n\r\nexport default function CardsGallery({ users, filter }) {\r\n  const [next, setNext] = useState(perPage);\r\n\r\n  const loadMore = () => {\r\n    setNext(next + perPage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNext(perPage);\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      {users.length > 0 ? (\r\n        <>\r\n          <List>\r\n            {users.slice(0, next).map(user => (\r\n              <ListItem key={user.id}>\r\n                <Card\r\n                  user={user.user}\r\n                  avatar={user.avatar}\r\n                  tweets={user.tweets}\r\n                  followers={user.followers}\r\n                  id={user.id}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Flex>\r\n            {next < users.length && (\r\n              <Button type=\"button\" onClick={loadMore}>\r\n                Load more\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </>\r\n      ) : (\r\n        <Notification>There is no one here :(</Notification>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nCardsGallery.propTypes = {\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      user: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      tweets: PropTypes.number.isRequired,\r\n      followers: PropTypes.number.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-family: 'Montserrat';\r\n  font-size: 20px;\r\n  color: #373737;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  font-family: 'Montserrat';\r\n  font-size: 20px;\r\n  color: #373737;\r\n  padding: 2px 4px;\r\n  outline: none;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Form, Label, Select } from './Filter.styled';\r\n\r\nexport default function Filter({ onFilterChange }) {\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const filterValue = evt.target.value;\r\n    onFilterChange(filterValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Label htmlFor=\"filter\">Filter by:</Label>\r\n        <Select id=\"filter\" name=\"filter\" onChange={handleSubmit}>\r\n          <option value=\"all\">Show all</option>\r\n          <option value=\"follow\">Follow</option>\r\n          <option value=\"following\">Following</option>\r\n        </Select>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func.isRequired,\r\n};\r\n","import CardsGallery from 'components/CardsGallery';\r\nimport Filter from 'components/Filter';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getUsers } from 'services/users-api';\r\nimport { ArrowStyled, StyledLink, TopSection } from './pages.styled';\r\n\r\nexport default function Tweets() {\r\n  const [status, setStatus] = useState('idle');\r\n  const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n  const [renderUsers, setRenderUsers] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const backLinkRef = useRef(location.state?.from ?? '/');\r\n\r\n  useEffect(() => {\r\n    setUsers([]);\r\n    setStatus('pending');\r\n\r\n    getUsers()\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n\r\n        return Promise.reject('Error');\r\n      })\r\n      .then(users => {\r\n        if (users.length === 0) {\r\n          setStatus('rejected');\r\n          return;\r\n        }\r\n        setRenderUsers(users);\r\n        setUsers(users);\r\n        setStatus('resolved');\r\n      })\r\n      .catch(error => {\r\n        setStatus('rejected');\r\n      });\r\n  }, []);\r\n\r\n  const onFilterChange = filterValue => {\r\n    setFilter(filterValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedIds = JSON.parse(localStorage.getItem('status')) || [];\r\n\r\n    if (filter === 'follow') {\r\n      const filteredUsers = users.filter(user =>\r\n        savedIds.every(item => item !== user.id)\r\n      );\r\n      setRenderUsers(filteredUsers);\r\n    } else if (filter === 'following') {\r\n      const filteredUsers = users.filter(user => savedIds.includes(user.id));\r\n      setRenderUsers(filteredUsers);\r\n    } else {\r\n      setRenderUsers(users);\r\n    }\r\n  }, [filter]);\r\n\r\n  return (\r\n    <div>\r\n      <TopSection>\r\n        <StyledLink to={backLinkRef.current}>\r\n          <ArrowStyled />\r\n          <span>Back</span>\r\n        </StyledLink>\r\n\r\n        <Filter onFilterChange={onFilterChange} />\r\n      </TopSection>\r\n\r\n      {status === 'pending' && <h1>Loading...</h1>}\r\n      {status === 'rejected' && (\r\n        <h1>Something went wrong. Please, reload page</h1>\r\n      )}\r\n      {status === 'resolved' && (\r\n        <CardsGallery users={renderUsers} filter={filter} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["BASE_URL","getUsers","fetch","concat","setNewUserData","update","id","requestOptions","method","headers","body","JSON","stringify","Rectangle","styled","_templateObject","_taggedTemplateLiteral","Ellipse","_templateObject2","UserImg","_templateObject3","Section","_templateObject4","Logo","_templateObject5","BgImg","_templateObject6","TextT","_templateObject7","TextF","_templateObject8","BtnFollow","_templateObject9","BtnFollowing","_templateObject10","Div","_templateObject11","TextBtn","_templateObject12","savedIds","parse","localStorage","getItem","Card","_ref","user","avatar","tweets","followers","_useState","useState","_useState2","_slicedToArray","newFollowers","setNewFollowers","isFirstRender","useRef","haveId","includes","handleBtnClick","state","push","ind","indexOf","splice","useEffect","current","Number","setItem","_jsxs","_Fragment","children","_jsx","src","logo","alt","bg","width","toLocaleString","type","onClick","List","ListItem","Button","Flex","Notification","perPage","CardsGallery","users","filter","next","setNext","length","slice","map","Form","Label","Select","Filter","onFilterChange","htmlFor","name","onChange","evt","preventDefault","filterValue","target","value","Tweets","_location$state$from","_location$state","status","setStatus","_useState3","_useState4","setUsers","_useState5","_useState6","setFilter","_useState7","_useState8","renderUsers","setRenderUsers","location","useLocation","backLinkRef","from","then","response","ok","json","Promise","reject","catch","error","filteredUsers","every","item","TopSection","StyledLink","to","ArrowStyled"],"sourceRoot":""}